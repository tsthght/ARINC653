function [ RETURN_CODE ] = SIGNAL_SEMAPHORE( SEMAPHORE_ID )

global RETURN_CODE_TYPE;
global Semaphore_Set;
global PROCESS_SCHEDULING_FLAG;
global Current_Partition_STATUS;

if SEMAPHORE_INVALID_ID(SEMAPHORE_ID) == 0
    RETURN_CODE = RETURN_CODE_TYPE.INVALID_PARAM;
    return;
end

LOCATION = FIND_SEMAPHORE_INDEX( SEMAPHORE_ID );

if Semaphore_Set{1,LOCATION}.CURRENT_VALUE == Semaphore_Set{1,LOCATION}.MAXIMUM_VALUE
    RETURN_CODE = RETURN_CODE_TYPE.NO_ACTION;
    return;
end
    
if Semaphore_Set{1,LOCATION}.WAITING_PROCESSES == 0
    Semaphore_Set{1,LOCATION}.CURRENT_VALUE=Semaphore_Set{1,LOCATION}.CURRENT_VALUE+1;
    RETURN_CODE = RETURN_CODE_TYPE.NO_ERROR;
    return;
else
    PROCESS_ID=Semaphore_Set{1,LOCATION}.SEMAPHORE_QUEUE(1);
    Semaphore_Set{1,LOCATION}.SEMAPHORE_QUEUE(1)=[];
    Semaphore_Set{1,LOCATION}.WAITING_PROCESSES=Semaphore_Set{1,LOCATION}.WAITING_PROCESSES-1;
    if WAITING_TIME_COUNTER(PROCESS_ID)==1
        STOP_TIME_COUNTER(PROCESS_ID);
    end
    DELETE_FROM_WAITING(PROCESS_ID);
    INSERT_INTO_READY(PROCESS_ID);    
    if Current_Partition_STATUS.LOCK_LEVEL <= 0
        PROCESS_SCHEDULING_FLAG = 1;
    end
    RETURN_CODE = RETURN_CODE_TYPE.NO_ERROR;
end
       
end

